diff --git a/arch/arm/dts/phyboard-stm32mp1-alpha-pi-hat-extension.dtsi b/arch/arm/dts/phyboard-stm32mp1-alpha-pi-hat-extension.dtsi
new file mode 100644
index 0000000..d1a92d5
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-alpha-pi-hat-extension.dtsi
@@ -0,0 +1,30 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+
+&spi1 {
+	cs-gpios = <&gpiog 2 0>;
+       status = "okay";
+
+	spi@0 {
+                compatible = "linux,spidev";
+                spi-max-frequency = <10000000>;
+                reg = <0>;
+        };
+};
+
+&sdmmc3 {
+	status = "okay";
+};
+
+&i2c1 {
+        status = "okay";
+};
+
+&usart1 {
+        status = "okay";
+};
+
diff --git a/arch/arm/dts/phyboard-stm32mp1-alpha-pinctrl.dtsi b/arch/arm/dts/phyboard-stm32mp1-alpha-pinctrl.dtsi
index f7cf88f..e4deb0f 100644
--- a/arch/arm/dts/phyboard-stm32mp1-alpha-pinctrl.dtsi
+++ b/arch/arm/dts/phyboard-stm32mp1-alpha-pinctrl.dtsi
@@ -915,29 +915,6 @@
 				};
 			};
 
-			spi5_pins_a: spi5-0 {
-				pins1 {
-					pinmux = <STM32_PINMUX('F', 7, AF5)>, /* SPI5_SCK */
-						 <STM32_PINMUX('F', 9, AF5)>; /* SPI5_MOSI */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <1>;
-				};
-
-				pins2 {
-					pinmux = <STM32_PINMUX('F', 8, AF5)>; /* SPI5_MISO */
-					bias-disable;
-				};
-			};
-
-			spi5_sleep_pins_a: spi5-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('F', 7, ANALOG)>, /* SPI5_SCK */
-						 <STM32_PINMUX('F', 8, ANALOG)>, /* SPI5_MISO */
-						 <STM32_PINMUX('F', 9, ANALOG)>; /* SPI5_MOSI */
-				};
-			};
-
 			uart4_pins_a: uart4-0 {
 				pins1 {
 					pinmux = <STM32_PINMUX('B', 9, AF8)>; /* UART4_TX */
diff --git a/arch/arm/dts/phyboard-stm32mp1-alpha.dtsi b/arch/arm/dts/phyboard-stm32mp1-alpha.dtsi
index 7f74d74..4d6669c 100644
--- a/arch/arm/dts/phyboard-stm32mp1-alpha.dtsi
+++ b/arch/arm/dts/phyboard-stm32mp1-alpha.dtsi
@@ -251,16 +251,10 @@
 };
 
 &spi4 {
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&spi4_pins_a>;
-	pinctrl-1 = <&spi4_sleep_pins_a>;
 	status = "disabled";
 };
 
 &spi5 {
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&spi5_pins_a>;
-	pinctrl-1 = <&spi5_sleep_pins_a>;
 	status = "disabled";
 };
 
@@ -353,7 +347,8 @@
 	pinctrl-0 = <&usart3_pins_b>;
 	pinctrl-1 = <&usart3_sleep_pins_b>;
 	pinctrl-2 = <&usart3_idle_pins_b>;
-        st,hw-flow-ctrl;
+        /*st,hw-flow-ctrl;*/
+        /*linux,rs485-enabled-at-boot-time;*/
 	status = "okay";
 };
 
@@ -400,8 +395,9 @@
 };
 
 /* Select display interface by commenting/uncommenting the following lines */ 
-#include "phycore-stm32mp1-dsi-lcd-mb1407.dtsi"
-//#include "phycore-stm32mp1-peb-av01-hdmi.dtsi"
+//#include "phycore-stm32mp1-dsi-lcd-mb1407.dtsi"
+//#include "phycore-stm32mp1-dsi-rpi-official-display.dtsi"
+#include "phycore-stm32mp1-peb-av01-hdmi.dtsi"
 //#include "phycore-stm32mp1-peb-av02-lcd.dtsi"
 
 
diff --git a/arch/arm/dts/phyboard-stm32mp1-dsi-lcd-mb1407.dtsi b/arch/arm/dts/phyboard-stm32mp1-dsi-lcd-mb1407.dtsi
new file mode 100644
index 0000000..8578d51
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-dsi-lcd-mb1407.dtsi
@@ -0,0 +1,84 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+
+&i2c1 {
+        status = "okay";
+        touchscreen@2a {
+                compatible = "focaltech,ft6236";
+                reg = <0x2a>;
+                interrupts = <8 2>;
+                interrupt-parent = <&gpioi>;
+                interrupt-controller;
+                touchscreen-size-x = <480>;
+                touchscreen-size-y = <800>;
+                status = "okay";
+        };
+
+        touchscreen@38 {
+                compatible = "focaltech,ft6336";
+                reg = <0x38>;
+                interrupts = <8 2>;
+                interrupt-parent = <&gpioi>;
+                interrupt-controller;
+                touchscreen-size-x = <480>;
+                touchscreen-size-y = <800>;
+                status = "okay";
+        };
+};
+
+&ltdc {
+        dma-ranges;
+        status = "okay";
+
+        port {
+                #address-cells = <1>;
+                #size-cells = <0>;
+
+                ltdc_ep1_out: endpoint@1 {
+                        reg = <1>;
+                        remote-endpoint = <&dsi_in>;
+                };
+        };
+};
+
+&dsi {
+        #address-cells = <1>;
+        #size-cells = <0>;
+        status = "okay";
+
+        ports {
+                #address-cells = <1>;
+                #size-cells = <0>;
+
+                port@0 {
+                        reg = <0>;
+                        dsi_in: endpoint {
+                                remote-endpoint = <&ltdc_ep1_out>;
+                        };
+                };
+
+                port@1 {
+                        reg = <1>;
+                        dsi_out: endpoint {
+                                remote-endpoint = <&panel_in>;
+                        };
+                };
+        };
+
+        dsi_panel:panel@0 {
+                compatible = "orisetech,otm8009a";
+                reg = <0>;
+                reset-gpios = <&gpiod 9 GPIO_ACTIVE_LOW>;
+                status = "okay";
+
+                port {
+                        panel_in: endpoint {
+                                remote-endpoint = <&dsi_out>;
+                        };
+                };
+        };
+};
diff --git a/arch/arm/dts/phyboard-stm32mp1-dsi-rpi-official-display.dtsi b/arch/arm/dts/phyboard-stm32mp1-dsi-rpi-official-display.dtsi
new file mode 100644
index 0000000..205796c
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-dsi-rpi-official-display.dtsi
@@ -0,0 +1,71 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+
+&i2c1 {
+        status = "okay";
+
+        touchscreen@38 {
+                compatible = "sitronix,st1633";
+                reg = <0x38>;
+                interrupts = <2 2>;
+                interrupt-parent = <&gpiof>;
+                interrupt-controller;
+                status = "okay";
+        };
+
+	lcd@45 {
+		compatible = "raspberrypi,7inch-touchscreen-panel";
+		reg = <0x45>;
+		status = "okay";
+
+		port {
+			panel_in: endpoint {
+				remote-endpoint = <&dsi_out>;
+			};
+		};
+	};
+};
+
+&ltdc {
+        dma-ranges;
+        status = "okay";
+
+        port {
+                #address-cells = <1>;
+                #size-cells = <0>;
+
+                ltdc_ep1_out: endpoint@1 {
+                        reg = <1>;
+                        remote-endpoint = <&dsi_in>;
+                };
+        };
+};
+
+&dsi {
+        #address-cells = <1>;
+        #size-cells = <0>;
+        status = "okay";
+
+        ports {
+                #address-cells = <1>;
+                #size-cells = <0>;
+
+                port@0 {
+                        reg = <0>;
+                        dsi_in: endpoint {
+                                remote-endpoint = <&ltdc_ep1_out>;
+                        };
+                };
+
+                port@1 {
+                        reg = <1>;
+                        dsi_out: endpoint {
+                                remote-endpoint = <&panel_in>;
+                        };
+                };
+        };
+};
diff --git a/arch/arm/dts/phyboard-stm32mp1-motor-control.dtsi b/arch/arm/dts/phyboard-stm32mp1-motor-control.dtsi
new file mode 100644
index 0000000..73f21ce
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-motor-control.dtsi
@@ -0,0 +1,203 @@
+/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Christophe PARANT <c.parant@phytec.fr>.
+ */
+
+&vrefbuf {
+        status = "okay";
+};
+
+&adc {
+        pinctrl-names = "default";
+	pinctrl-0 = <&adc12_pins_mx>;
+	pinctrl-1 = <&adc12_sleep_pins_mx>;
+
+        vdd-supply = <&vdd>;
+        vdda-supply = <&vdd>;
+        vref-supply = <&vrefbuf>;
+        status = "okay";
+
+        adc1: adc@0 {
+                st,min-sample-time-nsecs = <5000>;
+                /* in6, in13, in15 */
+                st,adc-channels = <6 13 15>;
+                status = "okay";
+        };
+
+        adc2: adc@100 {
+                /* ANA0, ANA1, in2 */
+                st,adc-channels = <0 1 2>;
+                /* temperature sensor min sample time */
+                st,min-sample-time-nsecs = <10000>;
+                status = "okay";
+        };
+};
+
+
+&timers1{
+	status = "okay";
+
+	/* USER CODE BEGIN timers1 */
+	/* USER CODE END timers1 */
+
+	pwm1: pwm{
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&tim1_pwm_pins_mx>;
+		pinctrl-1 = <&tim1_pwm_sleep_pins_mx>;
+		status = "okay";
+
+		/* USER CODE BEGIN timers1_pwm */
+		/* USER CODE END timers1_pwm */
+	};
+};
+
+&timers3{
+	status = "okay";
+
+	/* USER CODE BEGIN timers3 */
+	/* USER CODE END timers3 */
+
+	pwm3: pwm{
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&tim3_pwm_pins_mx>;
+		pinctrl-1 = <&tim3_pwm_sleep_pins_mx>;
+		status = "okay";
+
+		/* USER CODE BEGIN timers3_pwm */
+		/* USER CODE END timers3_pwm */
+	};
+};
+
+&timers5{
+	status = "okay";
+
+	/* USER CODE BEGIN timers5 */
+	/* USER CODE END timers5 */
+
+	pwm{
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&tim5_pwm_pins_mx>;
+		pinctrl-1 = <&tim5_pwm_sleep_pins_mx>;
+		status = "okay";
+
+		/* USER CODE BEGIN timers5_pwm */
+		/* USER CODE END timers5_pwm */
+	};
+};
+
+&timers8{
+	status = "okay";
+
+	/* USER CODE BEGIN timers8 */
+	/* USER CODE END timers8 */
+
+	pwm8: pwm{
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&tim8_pwm_pins_mx>;
+		pinctrl-1 = <&tim8_pwm_sleep_pins_mx>;
+		status = "okay";
+
+		/* USER CODE BEGIN timers8_pwm */
+		/* USER CODE END timers8_pwm */
+	};
+};
+
+
+&pinctrl {
+    adc12_pins_mx: adc12_mx-0 {
+                pins {
+                pinmux = <STM32_PINMUX('A', 3, ANALOG)>, /* ADC1 in15 */
+                         <STM32_PINMUX('C', 3, ANALOG)>, /* ADC1 in13 */
+                         <STM32_PINMUX('F', 12, ANALOG)>, /* ADC1 in6 */
+                         <STM32_PINMUX('F', 13, ANALOG)>; /* ADC2 in2 */
+          };
+    };
+
+    adc12_sleep_pins_mx: adc12_sleep_mx-0 {
+          pins {
+             pinmux = <STM32_PINMUX('A', 3, ANALOG)>, /* ADC1 in15 */
+                      <STM32_PINMUX('C', 3, ANALOG)>, /* ADC1 in13 */
+                      <STM32_PINMUX('F', 12, ANALOG)>, /* ADC1 in6 */
+                      <STM32_PINMUX('F', 13, ANALOG)>; /* ADC2 in2 */
+             };
+    };
+
+    tim1_pwm_pins_mx: tim1_pwm_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 11, AF1)>, /* TIM1_CH2 */
+					 <STM32_PINMUX('E', 14, AF1)>; /* TIM1_CH4 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+    };
+
+
+    tim1_pwm_sleep_pins_mx: tim1_pwm_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 11, ANALOG)>, /* TIM1_CH2 */
+					 <STM32_PINMUX('E', 14, ANALOG)>; /* TIM1_CH4 */
+		};
+    };
+
+    tim3_pwm_pins_mx: tim3_pwm_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 6, AF2)>; /* TIM3_CH1 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+    };
+
+    tim3_pwm_sleep_pins_mx: tim3_pwm_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 6, ANALOG)>; /* TIM3_CH1 */
+		};
+    };
+
+    tim5_pwm_pins_mx: tim5_pwm_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('H', 10, AF2)>, /* TIM5_CH1 */
+					 <STM32_PINMUX('H', 12, AF2)>, /* TIM5_CH3 */
+					 <STM32_PINMUX('I', 0, AF2)>; /* TIM5_CH4 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+    };
+
+    tim5_pwm_sleep_pins_mx: tim5_pwm_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('H', 10, ANALOG)>, /* TIM5_CH1 */
+					 <STM32_PINMUX('H', 12, ANALOG)>, /* TIM5_CH3 */
+					 <STM32_PINMUX('I', 0, ANALOG)>; /* TIM5_CH4 */
+		};
+    };
+
+    tim8_pwm_pins_mx: tim8_pwm_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 5, AF3)>, /* TIM8_CH1N */
+					 <STM32_PINMUX('B', 0, AF3)>, /* TIM8_CH2N */
+					 <STM32_PINMUX('C', 7, AF3)>, /* TIM8_CH2 */
+					 <STM32_PINMUX('H', 15, AF3)>, /* TIM8_CH3N */
+					 <STM32_PINMUX('I', 5, AF3)>, /* TIM8_CH1 */
+					 <STM32_PINMUX('I', 7, AF3)>; /* TIM8_CH3 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+    };
+
+    tim8_pwm_sleep_pins_mx: tim8_pwm_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 5, ANALOG)>, /* TIM8_CH1N */
+					 <STM32_PINMUX('B', 0, ANALOG)>, /* TIM8_CH2N */
+					 <STM32_PINMUX('C', 7, ANALOG)>, /* TIM8_CH2 */
+					 <STM32_PINMUX('H', 15, ANALOG)>, /* TIM8_CH3N */
+					 <STM32_PINMUX('I', 5, ANALOG)>, /* TIM8_CH1 */
+					 <STM32_PINMUX('I', 7, ANALOG)>; /* TIM8_CH3 */
+		};
+    };
+};
+
diff --git a/arch/arm/dts/phyboard-stm32mp1-peb-av01-hdmi.dtsi b/arch/arm/dts/phyboard-stm32mp1-peb-av01-hdmi.dtsi
new file mode 100644
index 0000000..391d343
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-peb-av01-hdmi.dtsi
@@ -0,0 +1,43 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+&i2c1 {
+        tda19988@70 {
+                compatible = "nxp,tda998x";
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&ltdc_pins_a>;
+		pinctrl-1 = <&ltdc_pins_sleep_a>;
+                reg = <0x70>;
+                status = "okay";
+
+                ports {
+                        port@0 {
+                                hdmi_in: endpoint@0 {
+                                        remote-endpoint = <&ltdc_ep0_out>;
+                                };
+                        };
+                };
+        };
+};
+
+&ltdc {
+        dma-ranges;
+	status = "okay";
+
+	port {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ltdc_ep0_out: endpoint@0 {
+			reg = <0>;
+			remote-endpoint = <&hdmi_in>;
+		};
+	};
+};
+
+&dsi {
+        status = "disabled";
+};
diff --git a/arch/arm/dts/phyboard-stm32mp1-peb-av02-lcd-res.dtsi b/arch/arm/dts/phyboard-stm32mp1-peb-av02-lcd-res.dtsi
new file mode 100644
index 0000000..077c215
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-peb-av02-lcd-res.dtsi
@@ -0,0 +1,76 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+/ {
+        panel_rgb: panel {
+                compatible = "edt,etm0700g0edh6";
+
+                status = "okay";
+                backlight = <&panel_backlight>;
+		enable-gpios = <&gpioa 4 GPIO_ACTIVE_HIGH>;		
+
+                port {
+                        panel_in_rgb: endpoint {
+                                remote-endpoint = <&ltdc_ep0_out>;
+                        };
+                };
+        };
+
+        panel_backlight: panel-backlight {
+                compatible = "pwm-backlight";
+		pwms = <&pwm_5 3 100000>;
+
+		power-supply = <&v3v3>;		
+
+		brightness-levels = <0 4 8 16 32 64 128 255>;
+		default-brightness-level = <6>;
+                status = "okay";
+        };
+};
+
+&timers5 {
+	status = "okay";
+        /delete-property/dmas;
+        /delete-property/dma-names;
+        pwm_5: pwm {
+		#pwm-cells = <2>;
+                pinctrl-0 = <&pwm5_pins_a>;
+                pinctrl-1 = <&pwm5_sleep_pins_a>;
+                pinctrl-names = "default", "sleep";
+                status = "okay";
+        };
+
+        timer@4 {
+                status = "disabled";
+        };
+};
+
+&ltdc {
+	dma-ranges;
+        status = "okay";
+  
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&ltdc_pins_a>;
+        pinctrl-1 = <&ltdc_pins_sleep_a>;
+
+        port {
+                #address-cells = <1>;
+                #size-cells = <0>;
+
+                ltdc_ep0_out: endpoint@0 {
+                        reg = <0>;
+                        remote-endpoint = <&panel_in_rgb>;
+                };
+        };
+};
+
+&stmpe_touch {
+        status = "okay";
+};
+
+&dsi {
+	status = "disabled";
+};
diff --git a/arch/arm/dts/phyboard-stm32mp1-peb-av02-lcd.dtsi b/arch/arm/dts/phyboard-stm32mp1-peb-av02-lcd.dtsi
new file mode 100644
index 0000000..98c6aa5
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-peb-av02-lcd.dtsi
@@ -0,0 +1,84 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+/ {
+        panel_rgb: panel {
+                compatible = "edt,etm0700g0edh6";
+
+                status = "okay";
+                backlight = <&panel_backlight>;
+		enable-gpios = <&gpioa 4 GPIO_ACTIVE_HIGH>;		
+
+                port {
+                        panel_in_rgb: endpoint {
+                                remote-endpoint = <&ltdc_ep0_out>;
+                        };
+                };
+        };
+
+        panel_backlight: panel-backlight {
+                compatible = "pwm-backlight";
+		pwms = <&pwm_5 3 100000>;
+
+		power-supply = <&v3v3>;		
+
+		brightness-levels = <0 4 8 16 32 64 128 255>;
+		default-brightness-level = <6>;
+                status = "okay";
+        };
+};
+
+&timers5 {
+	status = "okay";
+        /delete-property/dmas;
+        /delete-property/dma-names;
+        pwm_5: pwm {
+		#pwm-cells = <2>;
+                pinctrl-0 = <&pwm5_pins_a>;
+                pinctrl-1 = <&pwm5_sleep_pins_a>;
+                pinctrl-names = "default", "sleep";
+                status = "okay";
+        };
+
+        timer@4 {
+                status = "disabled";
+        };
+};
+
+&ltdc {
+	dma-ranges;
+        status = "okay";
+  
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&ltdc_pins_a>;
+        pinctrl-1 = <&ltdc_pins_sleep_a>;
+
+        port {
+                #address-cells = <1>;
+                #size-cells = <0>;
+
+                ltdc_ep0_out: endpoint@0 {
+                        reg = <0>;
+                        remote-endpoint = <&panel_in_rgb>;
+                };
+        };
+};
+
+&i2c1 {
+	i2c_ts: touchscreen@38 {
+		compatible = "edt,edt-ft5406", "edt,edt-ft5x06";
+		reg = <0x38>;
+                interrupts = <8 2>;
+                interrupt-parent = <&gpioi>;
+                interrupt-controller;
+		reset-gpios = <&gpiod 9 1>;
+		status = "okay";
+	};
+};
+
+&dsi {
+	status = "disabled";
+};
diff --git a/arch/arm/dts/phyboard-stm32mp1-pi-hat-extension.dtsi b/arch/arm/dts/phyboard-stm32mp1-pi-hat-extension.dtsi
new file mode 100644
index 0000000..6326fc0
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-pi-hat-extension.dtsi
@@ -0,0 +1,37 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+
+&spi1 {
+        status = "okay";
+	cs-gpios = <&gpioz 3 0>;
+	spi@0 {
+                compatible = "linux,spidev";
+                spi-max-frequency = <10000000>;
+                reg = <0>;
+        };
+};
+
+&sdmmc3 {
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc3_b4_pins_a>;
+	pinctrl-1 = <&sdmmc3_b4_od_pins_a>;
+	pinctrl-2 = <&sdmmc3_b4_sleep_pins_a>;
+	st,neg-edge;
+	bus-width = <4>;
+	max-frequency = <10000000>;
+	vmmc-supply = <&v3v3>;
+	status = "disabled";
+};
+
+&i2c1 {
+        status = "okay";
+};
+
+&usart1 {
+        status = "okay";
+};
+
diff --git a/arch/arm/dts/phyboard-stm32mp1-pi-hat-redbear.dtsi b/arch/arm/dts/phyboard-stm32mp1-pi-hat-redbear.dtsi
new file mode 100644
index 0000000..ee84834
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-pi-hat-redbear.dtsi
@@ -0,0 +1,63 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019-2020 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ * Devicetree expansion for RedBear IoT pHAT Wifi Bluetooth module
+ */
+
+
+/ {
+	gpio_led_wl: leds {
+		compatible = "gpio-leds";
+		status = "okay";
+
+		wl_reg {
+			gpios = <&gpioe 4 0>;
+			linux,default-trigger = "default-on";
+		};
+	};
+};
+
+&spi1 {
+        status = "okay";
+	cs-gpios = <&gpioz 3 0>;
+	spi@0 {
+                compatible = "linux,spidev";
+                spi-max-frequency = <10000000>;
+                reg = <0>;
+        };
+};
+
+&sdmmc3 {
+	arm,primecell-periphid = <0x10153180>;
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc3_b4_pins_a>;
+	pinctrl-1 = <&sdmmc3_b4_od_pins_a>;
+	pinctrl-2 = <&sdmmc3_b4_sleep_pins_a>;
+	non-removable;
+	st,neg-edge;
+	bus-width = <4>;
+	max-frequency = <10000000>;
+	vmmc-supply = <&v3v3>;
+	status = "okay";
+
+	brcmf: bcrmf@1 {
+		reg = <1>;
+		compatible = "brcm,bcm4329-fmac";
+	};
+};
+
+&i2c1 {
+        status = "okay";
+};
+
+&usart1 {
+        status = "okay";
+	st,hw-flow-ctrl;
+
+	bluetooth {
+		shutdown-gpios = <&gpiog 2 GPIO_ACTIVE_HIGH>;
+		compatible = "brcm,bcm43438-bt";
+		max-speed = <3000000>;
+	};
+};
diff --git a/arch/arm/dts/phyboard-stm32mp1-pinctrl.dtsi b/arch/arm/dts/phyboard-stm32mp1-pinctrl.dtsi
index 02c5889..83f6a1d 100644
--- a/arch/arm/dts/phyboard-stm32mp1-pinctrl.dtsi
+++ b/arch/arm/dts/phyboard-stm32mp1-pinctrl.dtsi
@@ -7,41 +7,6 @@
 #include <dt-bindings/pinctrl/stm32-pinfunc.h>
 
 &pinctrl {
-			adc1_in6_pins_a: adc1-in6 {
-				pins {
-					pinmux = <STM32_PINMUX('F', 12, ANALOG)>;
-				};
-			};
-
-			cec_pins_a: cec-0 {
-				pins {
-					pinmux = <STM32_PINMUX('A', 15, AF4)>;
-					bias-disable;
-					drive-open-drain;
-					slew-rate = <0>;
-				};
-			};
-
-			cec_pins_sleep_a: cec-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('A', 15, ANALOG)>; /* HDMI_CEC */
-				};
-			};
-
-			cec_pins_b: cec-1 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 6, AF5)>;
-					bias-disable;
-					drive-open-drain;
-					slew-rate = <0>;
-				};
-			};
-
-			cec_pins_sleep_b: cec-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 6, ANALOG)>; /* HDMI_CEC */
-				};
-			};
 
 			dac_ch1_pins_a: dac-ch1 {
 				pins {
@@ -61,17 +26,15 @@
 						 <STM32_PINMUX('B', 7,  AF13)>,/* DCMI_VSYNC */
 						 <STM32_PINMUX('A', 6,  AF13)>,/* DCMI_PIXCLK */
 						 <STM32_PINMUX('H', 9,  AF13)>,/* DCMI_D0 */
-						 <STM32_PINMUX('H', 10, AF13)>,/* DCMI_D1 */
-						 <STM32_PINMUX('H', 11, AF13)>,/* DCMI_D2 */
-						 <STM32_PINMUX('H', 12, AF13)>,/* DCMI_D3 */
+						 <STM32_PINMUX('C', 7,  AF13)>,/* DCMI_D1 */
+						 <STM32_PINMUX('E', 0,  AF13)>,/* DCMI_D2 */
+						 <STM32_PINMUX('E', 1,  AF13)>,/* DCMI_D3 */
 						 <STM32_PINMUX('H', 14, AF13)>,/* DCMI_D4 */
 						 <STM32_PINMUX('I', 4,  AF13)>,/* DCMI_D5 */
-						 <STM32_PINMUX('B', 8,  AF13)>,/* DCMI_D6 */
-						 <STM32_PINMUX('E', 6,  AF13)>,/* DCMI_D7 */
+						 <STM32_PINMUX('E', 5,  AF13)>,/* DCMI_D6 */
+						 <STM32_PINMUX('I', 7,  AF13)>,/* DCMI_D7 */
 						 <STM32_PINMUX('I', 1,  AF13)>,/* DCMI_D8 */
-						 <STM32_PINMUX('H', 7,  AF13)>,/* DCMI_D9 */
-						 <STM32_PINMUX('I', 3,  AF13)>,/* DCMI_D10 */
-						 <STM32_PINMUX('H', 15, AF13)>;/* DCMI_D11 */
+						 <STM32_PINMUX('H', 7,  AF13)>;/* DCMI_D9 */
 					bias-disable;
 				};
 			};
@@ -82,298 +45,18 @@
 						 <STM32_PINMUX('B', 7,  ANALOG)>,/* DCMI_VSYNC */
 						 <STM32_PINMUX('A', 6,  ANALOG)>,/* DCMI_PIXCLK */
 						 <STM32_PINMUX('H', 9,  ANALOG)>,/* DCMI_D0 */
-						 <STM32_PINMUX('H', 10, ANALOG)>,/* DCMI_D1 */
-						 <STM32_PINMUX('H', 11, ANALOG)>,/* DCMI_D2 */
-						 <STM32_PINMUX('H', 12, ANALOG)>,/* DCMI_D3 */
+						 <STM32_PINMUX('C', 7,  ANALOG)>,/* DCMI_D1 */
+						 <STM32_PINMUX('E', 0,  ANALOG)>,/* DCMI_D2 */
+						 <STM32_PINMUX('E', 1,  ANALOG)>,/* DCMI_D3 */
 						 <STM32_PINMUX('H', 14, ANALOG)>,/* DCMI_D4 */
 						 <STM32_PINMUX('I', 4,  ANALOG)>,/* DCMI_D5 */
-						 <STM32_PINMUX('B', 8,  ANALOG)>,/* DCMI_D6 */
-						 <STM32_PINMUX('E', 6,  ANALOG)>,/* DCMI_D7 */
+						 <STM32_PINMUX('E', 5,  ANALOG)>,/* DCMI_D6 */
+						 <STM32_PINMUX('I', 7,  ANALOG)>,/* DCMI_D7 */
 						 <STM32_PINMUX('I', 1,  ANALOG)>,/* DCMI_D8 */
-						 <STM32_PINMUX('H', 7,  ANALOG)>,/* DCMI_D9 */
-						 <STM32_PINMUX('I', 3,  ANALOG)>,/* DCMI_D10 */
-						 <STM32_PINMUX('H', 15, ANALOG)>;/* DCMI_D11 */
-				};
-			};
-
-			dfsdm_clkout_pins_a: dfsdm-clkout-pins-0 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 13, AF3)>; /* DFSDM_CKOUT */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <1>;
-				};
-			};
-
-			dfsdm_clkout_sleep_pins_a: dfsdm-clkout-sleep-pins-0 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 13, ANALOG)>; /* DFSDM_CKOUT */
-				};
-			};
-
-			dfsdm_data1_pins_a: dfsdm-data1-pins-0 {
-				pins {
-					pinmux = <STM32_PINMUX('C', 3, AF3)>; /* DFSDM_DATA1 */
-				};
-			};
-
-			dfsdm_data1_sleep_pins_a: dfsdm-data1-sleep-pins-0 {
-				pins {
-					pinmux = <STM32_PINMUX('C', 3, ANALOG)>; /* DFSDM_DATA1 */
-				};
-			};
-
-			dfsdm_data3_pins_a: dfsdm-data3-pins-0 {
-				pins {
-					pinmux = <STM32_PINMUX('F', 13, AF6)>; /* DFSDM_DATA3 */
-				};
-			};
-
-			dfsdm_data3_sleep_pins_a: dfsdm-data3-sleep-pins-0 {
-				pins {
-					pinmux = <STM32_PINMUX('F', 13, ANALOG)>; /* DFSDM_DATA3 */
-				};
-			};
-
-			hdp0_pins_a: hdp0-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 12, AF2)>; /* HDP0 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp0_pins_sleep_a: hdp0-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 12, ANALOG)>; /* HDP0 */
-				};
-			};
-
-			hdp0_pins_b: hdp0-1 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 10, AF0)>; /* HDP0 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp0_pins_sleep_b: hdp0-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 10, ANALOG)>; /* HDP0 */
-				};
-			};
-
-			hdp1_pins_a: hdp1-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 13, AF2)>; /* HDP1 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp1_pins_sleep_a: hdp1-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 13, ANALOG)>; /* HDP1 */
-				};
-			};
-
-			hdp1_pins_b: hdp1-1 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 9, AF0)>; /* HDP1 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp1_pins_sleep_b: hdp1-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 9, ANALOG)>; /* HDP1 */
-				};
-			};
-
-			hdp2_pins_a: hdp2-0 {
-				pins {
-					pinmux = <STM32_PINMUX('J', 5, AF2)>; /* HDP2 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp2_pins_sleep_a: hdp2-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('J', 5, ANALOG)>; /* HDP2 */
-				};
-			};
-
-			hdp2_pins_b: hdp2-1 {
-				pins {
-					pinmux = <STM32_PINMUX('E', 13, AF0)>; /* HDP2 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
+						 <STM32_PINMUX('H', 7,  ANALOG)>;/* DCMI_D9 */
 				};
 			};
 
-			hdp2_pins_sleep_b: hdp2-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('E', 13, ANALOG)>; /* HDP2 */
-				};
-			};
-
-			hdp3_pins_a: hdp3-0 {
-				pins {
-					pinmux = <STM32_PINMUX('J', 6, AF2)>; /* HDP3 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp3_pins_sleep_a: hdp3-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('J', 6, ANALOG)>; /* HDP3 */
-				};
-			};
-
-			hdp3_pins_b: hdp3-1 {
-				pins {
-					pinmux = <STM32_PINMUX('E', 15, AF0)>; /* HDP3 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp3_pins_sleep_b: hdp3-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('E', 15, ANALOG)>; /* HDP3 */
-				};
-			};
-
-			hdp4_pins_a: hdp4-0 {
-				pins {
-					pinmux = <STM32_PINMUX('K', 1, AF2)>; /* HDP4 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp4_pins_sleep_a: hdp4-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('K', 1, ANALOG)>; /* HDP4 */
-				};
-			};
-
-			hdp4_pins_b: hdp4-1 {
-				pins {
-					pinmux = <STM32_PINMUX('C', 7, AF0)>; /* HDP4 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp4_pins_sleep_b: hdp4-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('C', 7, ANALOG)>; /* HDP4 */
-				};
-			};
-
-			hdp5_pins_a: hdp5-0 {
-				pins {
-					pinmux = <STM32_PINMUX('K', 2, AF2)>; /* HDP5 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp5_pins_sleep_a: hdp5-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('K', 2, ANALOG)>; /* HDP5 */
-				};
-			};
-
-			hdp5_pins_b: hdp5-1 {
-				pins {
-					pinmux = <STM32_PINMUX('D', 3, AF0)>; /* HDP5 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp5_pins_sleep_b: hdp5-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('D', 3, ANALOG)>; /* HDP5 */
-				};
-			};
-
-			hdp6_pins_a: hdp6-0 {
-				pins {
-					pinmux = <STM32_PINMUX('K', 5, AF2)>; /* HDP6 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp6_pins_sleep_a: hdp6-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('K', 5, ANALOG)>; /* HDP6 */
-				};
-			};
-
-			hdp6_pins_b: hdp6-1 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 8, AF0)>; /* HDP6 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp6_pins_sleep_b: hdp6-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 8, ANALOG)>; /* HDP6 */
-				};
-			};
-
-			hdp7_pins_a: hdp7-0 {
-				pins {
-					pinmux = <STM32_PINMUX('K', 6, AF2)>; /* HDP7 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp7_pins_sleep_a: hdp7-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('K', 6, ANALOG)>; /* HDP7 */
-				};
-			};
-
-			hdp7_pins_b: hdp7-1 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 9, AF0)>; /* HDP7 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <2>;
-				};
-			};
-
-			hdp7_pins_sleep_b: hdp7-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 9, ANALOG)>; /* HDP7 */
-				};
-			};
 
 			i2c1_pins_a: i2c1-0 {
 				pins {
@@ -387,55 +70,20 @@
 
 			i2c1_pins_sleep_a: i2c1-1 {
 				pins {
-					pinmux = <STM32_PINMUX('D', 12, ANALOG)>, /* I2C1_SCL */
+					pinmux = <STM32_PINMUX('F', 14, ANALOG)>, /* I2C1_SCL */
 						 <STM32_PINMUX('F', 15, ANALOG)>; /* I2C1_SDA */
 				};
 			};
 
-			i2c2_pins_a: i2c2-0 {
-				pins {
-					pinmux = <STM32_PINMUX('H', 4, AF4)>, /* I2C2_SCL */
-						 <STM32_PINMUX('H', 5, AF4)>; /* I2C2_SDA */
-					bias-disable;
-					drive-open-drain;
-					slew-rate = <0>;
-				};
-			};
-
-			i2c2_pins_sleep_a: i2c2-1 {
-				pins {
-					pinmux = <STM32_PINMUX('H', 4, ANALOG)>, /* I2C2_SCL */
-						 <STM32_PINMUX('H', 5, ANALOG)>; /* I2C2_SDA */
-				};
-			};
-
-			i2s2_pins_a: i2s2-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 3, AF5)>, /* I2S2_SDO */
-						 <STM32_PINMUX('B', 9, AF5)>, /* I2S2_WS */
-						 <STM32_PINMUX('A', 9, AF5)>; /* I2S2_CK */
-					slew-rate = <1>;
-					drive-push-pull;
-					bias-disable;
-				};
-			};
-
-			i2s2_pins_sleep_a: i2s2-1 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 3, ANALOG)>, /* I2S2_SDO */
-						 <STM32_PINMUX('B', 9, ANALOG)>, /* I2S2_WS */
-						 <STM32_PINMUX('A', 9, ANALOG)>; /* I2S2_CK */
-				};
-			};
 
 			ltdc_pins_a: ltdc-a-0 {
 				pins {
-					pinmux = <STM32_PINMUX('G',  7, AF14)>, /* LCD_CLK */
+					pinmux = <STM32_PINMUX('G', 7,  AF14)>, /* LCD_CLK */
 						 <STM32_PINMUX('I', 10, AF14)>, /* LCD_HSYNC */
-						 <STM32_PINMUX('I',  9, AF14)>, /* LCD_VSYNC */
+						 <STM32_PINMUX('I', 9,  AF14)>, /* LCD_VSYNC */
 						 <STM32_PINMUX('E', 13, AF14)>, /* LCD_DE */
 						 <STM32_PINMUX('C', 10, AF14)>, /* LCD_R2 */
-						 <STM32_PINMUX('B',   0, AF9)>, /* LCD_R3 */
+						 <STM32_PINMUX('B', 0,   AF9)>, /* LCD_R3 */
 						 <STM32_PINMUX('H', 10, AF14)>, /* LCD_R4 */
 						 <STM32_PINMUX('H', 11, AF14)>, /* LCD_R5 */
 						 <STM32_PINMUX('H', 12, AF14)>, /* LCD_R6 */
@@ -443,15 +91,15 @@
 						 <STM32_PINMUX('H', 13, AF14)>, /* LCD_G2 */
 						 <STM32_PINMUX('E', 11, AF14)>, /* LCD_G3 */
 						 <STM32_PINMUX('H', 15, AF14)>, /* LCD_G4 */
-						 <STM32_PINMUX('H',  4,  AF9)>, /* LCD_G5 */
+						 <STM32_PINMUX('H', 4,   AF9)>, /* LCD_G5 */
 						 <STM32_PINMUX('I', 11,  AF9)>, /* LCD_G6 */
-						 <STM32_PINMUX('I',  2, AF14)>, /* LCD_G7 */
+						 <STM32_PINMUX('I', 2,  AF14)>, /* LCD_G7 */
 						 <STM32_PINMUX('G', 10, AF14)>, /* LCD_B2 */
 						 <STM32_PINMUX('G', 11, AF14)>, /* LCD_B3 */
 						 <STM32_PINMUX('E', 12, AF14)>, /* LCD_B4 */
-						 <STM32_PINMUX('I',  5, AF14)>, /* LCD_B5 */
-						 <STM32_PINMUX('B',  8, AF14)>, /* LCD_B6 */
-						 <STM32_PINMUX('D',  8, AF14)>; /* LCD_B7 */
+						 <STM32_PINMUX('I', 5,  AF14)>, /* LCD_B5 */
+						 <STM32_PINMUX('B', 8,  AF14)>, /* LCD_B6 */
+						 <STM32_PINMUX('D', 8,  AF14)>; /* LCD_B7 */
 					bias-disable;
 					drive-push-pull;
 					slew-rate = <1>;
@@ -460,12 +108,12 @@
 
 			ltdc_pins_sleep_a: ltdc-a-1 {
 				pins {
-                                        pinmux = <STM32_PINMUX('G',  7, ANALOG)>, /* LCD_CLK */
+                                        pinmux = <STM32_PINMUX('G', 7,  ANALOG)>, /* LCD_CLK */
                                                  <STM32_PINMUX('I', 10, ANALOG)>, /* LCD_HSYNC */
-                                                 <STM32_PINMUX('I',  9, ANALOG)>, /* LCD_VSYNC */
+                                                 <STM32_PINMUX('I', 9,  ANALOG)>, /* LCD_VSYNC */
                                                  <STM32_PINMUX('E', 13, ANALOG)>, /* LCD_DE */
                                                  <STM32_PINMUX('C', 10, ANALOG)>, /* LCD_R2 */
-                                                 <STM32_PINMUX('B',  0, ANALOG)>, /* LCD_R3 */
+                                                 <STM32_PINMUX('B', 0,  ANALOG)>, /* LCD_R3 */
                                                  <STM32_PINMUX('H', 10, ANALOG)>, /* LCD_R4 */
                                                  <STM32_PINMUX('H', 11, ANALOG)>, /* LCD_R5 */
                                                  <STM32_PINMUX('H', 12, ANALOG)>, /* LCD_R6 */
@@ -473,86 +121,18 @@
                                                  <STM32_PINMUX('H', 13, ANALOG)>, /* LCD_G2 */
                                                  <STM32_PINMUX('E', 11, ANALOG)>, /* LCD_G3 */
                                                  <STM32_PINMUX('H', 15, ANALOG)>, /* LCD_G4 */
-                                                 <STM32_PINMUX('H',  4, ANALOG)>, /* LCD_G5 */
+                                                 <STM32_PINMUX('H', 4,  ANALOG)>, /* LCD_G5 */
                                                  <STM32_PINMUX('I', 11, ANALOG)>, /* LCD_G6 */
-                                                 <STM32_PINMUX('I',  2, ANALOG)>, /* LCD_G7 */
+                                                 <STM32_PINMUX('I', 2,  ANALOG)>, /* LCD_G7 */
                                                  <STM32_PINMUX('G', 10, ANALOG)>, /* LCD_B2 */
                                                  <STM32_PINMUX('G', 11, ANALOG)>, /* LCD_B3 */
                                                  <STM32_PINMUX('E', 12, ANALOG)>, /* LCD_B4 */
-                                                 <STM32_PINMUX('I',  5, ANALOG)>, /* LCD_B5 */
-                                                 <STM32_PINMUX('B',  8, ANALOG)>, /* LCD_B6 */
-                                                 <STM32_PINMUX('D',  8, ANALOG)>; /* LCD_B7 */
+                                                 <STM32_PINMUX('I', 5,  ANALOG)>, /* LCD_B5 */
+                                                 <STM32_PINMUX('B', 8,  ANALOG)>, /* LCD_B6 */
+                                                 <STM32_PINMUX('D', 8,  ANALOG)>; /* LCD_B7 */
                                 };
 			};
 
-			ltdc_pins_b: ltdc-b-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 14, AF14)>, /* LCD_CLK */
-						 <STM32_PINMUX('I', 12, AF14)>, /* LCD_HSYNC */
-						 <STM32_PINMUX('I', 13, AF14)>, /* LCD_VSYNC */
-						 <STM32_PINMUX('K',  7, AF14)>, /* LCD_DE */
-						 <STM32_PINMUX('I', 15, AF14)>, /* LCD_R0 */
-						 <STM32_PINMUX('J',  0, AF14)>, /* LCD_R1 */
-						 <STM32_PINMUX('J',  1, AF14)>, /* LCD_R2 */
-						 <STM32_PINMUX('J',  2, AF14)>, /* LCD_R3 */
-						 <STM32_PINMUX('J',  3, AF14)>, /* LCD_R4 */
-						 <STM32_PINMUX('J',  4, AF14)>, /* LCD_R5 */
-						 <STM32_PINMUX('J',  5, AF14)>, /* LCD_R6 */
-						 <STM32_PINMUX('J',  6, AF14)>, /* LCD_R7 */
-						 <STM32_PINMUX('J',  7, AF14)>, /* LCD_G0 */
-						 <STM32_PINMUX('J',  8, AF14)>, /* LCD_G1 */
-						 <STM32_PINMUX('J',  9, AF14)>, /* LCD_G2 */
-						 <STM32_PINMUX('J', 10, AF14)>, /* LCD_G3 */
-						 <STM32_PINMUX('J', 11, AF14)>, /* LCD_G4 */
-						 <STM32_PINMUX('K',  0, AF14)>, /* LCD_G5 */
-						 <STM32_PINMUX('K',  1, AF14)>, /* LCD_G6 */
-						 <STM32_PINMUX('K',  2, AF14)>, /* LCD_G7 */
-						 <STM32_PINMUX('J', 12, AF14)>, /* LCD_B0 */
-						 <STM32_PINMUX('J', 13, AF14)>, /* LCD_B1 */
-						 <STM32_PINMUX('J', 14, AF14)>, /* LCD_B2 */
-						 <STM32_PINMUX('J', 15, AF14)>, /* LCD_B3 */
-						 <STM32_PINMUX('K',  3, AF14)>, /* LCD_B4 */
-						 <STM32_PINMUX('K',  4, AF14)>, /* LCD_B5 */
-						 <STM32_PINMUX('K',  5, AF14)>, /* LCD_B6 */
-						 <STM32_PINMUX('K',  6, AF14)>; /* LCD_B7 */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <1>;
-				};
-			};
-
-			ltdc_pins_sleep_b: ltdc-b-1 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 14, ANALOG)>, /* LCD_CLK */
-						 <STM32_PINMUX('I', 12, ANALOG)>, /* LCD_HSYNC */
-						 <STM32_PINMUX('I', 13, ANALOG)>, /* LCD_VSYNC */
-						 <STM32_PINMUX('K',  7, ANALOG)>, /* LCD_DE */
-						 <STM32_PINMUX('I', 15, ANALOG)>, /* LCD_R0 */
-						 <STM32_PINMUX('J',  0, ANALOG)>, /* LCD_R1 */
-						 <STM32_PINMUX('J',  1, ANALOG)>, /* LCD_R2 */
-						 <STM32_PINMUX('J',  2, ANALOG)>, /* LCD_R3 */
-						 <STM32_PINMUX('J',  3, ANALOG)>, /* LCD_R4 */
-						 <STM32_PINMUX('J',  4, ANALOG)>, /* LCD_R5 */
-						 <STM32_PINMUX('J',  5, ANALOG)>, /* LCD_R6 */
-						 <STM32_PINMUX('J',  6, ANALOG)>, /* LCD_R7 */
-						 <STM32_PINMUX('J',  7, ANALOG)>, /* LCD_G0 */
-						 <STM32_PINMUX('J',  8, ANALOG)>, /* LCD_G1 */
-						 <STM32_PINMUX('J',  9, ANALOG)>, /* LCD_G2 */
-						 <STM32_PINMUX('J', 10, ANALOG)>, /* LCD_G3 */
-						 <STM32_PINMUX('J', 11, ANALOG)>, /* LCD_G4 */
-						 <STM32_PINMUX('K',  0, ANALOG)>, /* LCD_G5 */
-						 <STM32_PINMUX('K',  1, ANALOG)>, /* LCD_G6 */
-						 <STM32_PINMUX('K',  2, ANALOG)>, /* LCD_G7 */
-						 <STM32_PINMUX('J', 12, ANALOG)>, /* LCD_B0 */
-						 <STM32_PINMUX('J', 13, ANALOG)>, /* LCD_B1 */
-						 <STM32_PINMUX('J', 14, ANALOG)>, /* LCD_B2 */
-						 <STM32_PINMUX('J', 15, ANALOG)>, /* LCD_B3 */
-						 <STM32_PINMUX('K',  3, ANALOG)>, /* LCD_B4 */
-						 <STM32_PINMUX('K',  4, ANALOG)>, /* LCD_B5 */
-						 <STM32_PINMUX('K',  5, ANALOG)>, /* LCD_B6 */
-						 <STM32_PINMUX('K',  6, ANALOG)>; /* LCD_B7 */
-				};
-			};
 
 			m_can2_pins_a: m-can1-0 {
 				pins1 {
@@ -574,86 +154,6 @@
 				};
 			};
 
-			pwm1_pins_a: pwm1-0 {
-				pins {
-					pinmux = <STM32_PINMUX('E', 9, AF1)>, /* TIM1_CH1 */
-						 <STM32_PINMUX('E', 11, AF1)>, /* TIM1_CH2 */
-						 <STM32_PINMUX('E', 14, AF1)>; /* TIM1_CH4 */
-					bias-pull-down;
-					drive-push-pull;
-					slew-rate = <0>;
-				};
-			};
-
-			pwm1_sleep_pins_a: pwm1-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('E', 9, ANALOG)>, /* TIM1_CH1 */
-						 <STM32_PINMUX('E', 11, ANALOG)>, /* TIM1_CH2 */
-						 <STM32_PINMUX('E', 14, ANALOG)>; /* TIM1_CH4 */
-				};
-			};
-
-			pwm2_pins_a: pwm2-0 {
-				pins {
-					pinmux = <STM32_PINMUX('A', 3, AF1)>; /* TIM2_CH4 */
-					bias-pull-down;
-					drive-push-pull;
-					slew-rate = <0>;
-				};
-			};
-
-			pwm2_sleep_pins_a: pwm2-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('A', 3, ANALOG)>; /* TIM2_CH4 */
-				};
-			};
-
-			pwm3_pins_a: pwm3-0 {
-				pins {
-					pinmux = <STM32_PINMUX('C', 7, AF2)>; /* TIM3_CH2 */
-					bias-pull-down;
-					drive-push-pull;
-					slew-rate = <0>;
-				};
-			};
-
-			pwm3_sleep_pins_a: pwm3-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('C', 7, ANALOG)>; /* TIM3_CH2 */
-				};
-			};
-
-			pwm4_pins_a: pwm4-0 {
-				pins {
-					pinmux = <STM32_PINMUX('D', 14, AF2)>, /* TIM4_CH3 */
-						 <STM32_PINMUX('D', 15, AF2)>; /* TIM4_CH4 */
-					bias-pull-down;
-					drive-push-pull;
-					slew-rate = <0>;
-				};
-			};
-
-			pwm4_sleep_pins_a: pwm4-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('D', 14, ANALOG)>, /* TIM4_CH3 */
-						 <STM32_PINMUX('D', 15, ANALOG)>; /* TIM4_CH4 */
-				};
-			};
-
-			pwm4_pins_b: pwm4-1 {
-				pins {
-					pinmux = <STM32_PINMUX('D', 13, AF2)>; /* TIM4_CH2 */
-					bias-pull-down;
-					drive-push-pull;
-					slew-rate = <0>;
-				};
-			};
-
-			pwm4_sleep_pins_b: pwm4-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('D', 13, ANALOG)>; /* TIM4_CH2 */
-				};
-			};
 
 			pwm5_pins_a: pwm5-0 {
 				pins {
@@ -670,41 +170,6 @@
 				};
 			};
 
-			pwm8_pins_a: pwm8-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 2, AF3)>; /* TIM8_CH4 */
-					bias-pull-down;
-					drive-push-pull;
-					slew-rate = <0>;
-				};
-			};
-
-			pwm8_sleep_pins_a: pwm8-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 2, ANALOG)>; /* TIM8_CH4 */
-				};
-			};
-
-			sai2a_pins_a: sai2a-0 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 5, AF10)>, /* SAI2_SCK_A */
-						 <STM32_PINMUX('I', 6, AF10)>, /* SAI2_SD_A */
-						 <STM32_PINMUX('I', 7, AF10)>, /* SAI2_FS_A */
-						 <STM32_PINMUX('E', 0, AF10)>; /* SAI2_MCLK_A */
-					slew-rate = <0>;
-					drive-push-pull;
-					bias-disable;
-				};
-			};
-
-			sai2a_sleep_pins_a: sai2a-1 {
-				pins {
-					pinmux = <STM32_PINMUX('I', 5, ANALOG)>, /* SAI2_SCK_A */
-						 <STM32_PINMUX('I', 6, ANALOG)>, /* SAI2_SD_A */
-						 <STM32_PINMUX('I', 7, ANALOG)>, /* SAI2_FS_A */
-						 <STM32_PINMUX('E', 0, ANALOG)>; /* SAI2_MCLK_A */
-				};
-			};
 
                         sai2a_pins_b: sai2a-2 {
                                 pins {
@@ -756,20 +221,6 @@
 				};
 			};
 
-			sai4a_pins_a: sai4a-0 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 5, AF10)>; /* SAI4_SD_A */
-					slew-rate = <0>;
-					drive-push-pull;
-					bias-disable;
-				};
-			};
-
-			sai4a_sleep_pins_a: sai4a-1 {
-				pins {
-					pinmux = <STM32_PINMUX('B', 5, ANALOG)>; /* SAI4_SD_A */
-				};
-			};
 
 			sdmmc1_b4_pins_a: sdmmc1-b4-0 {
 				pins1 {
@@ -879,64 +330,6 @@
 				};
 			};
 
-			spdifrx_pins_a: spdifrx-0 {
-				pins {
-					pinmux = <STM32_PINMUX('G', 12, AF8)>; /* SPDIF_IN1 */
-					bias-disable;
-				};
-			};
-
-			spdifrx_sleep_pins_a: spdifrx-1 {
-				pins {
-					pinmux = <STM32_PINMUX('G', 12, ANALOG)>; /* SPDIF_IN1 */
-				};
-			};
-
-			spi4_pins_a: spi4-0 {
-				pins1 {
-					pinmux = <STM32_PINMUX('E', 12, AF5)>, /* SPI4_SCK */
-						 <STM32_PINMUX('E', 14, AF5)>; /* SPI4_MOSI */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <1>;
-				};
-
-				pins2 {
-					pinmux = <STM32_PINMUX('E', 13, AF5)>; /* SPI4_MISO */
-					bias-disable;
-				};
-			};
-
-			spi4_sleep_pins_a: spi4-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('E', 12, ANALOG)>, /* SPI4_SCK */
-						 <STM32_PINMUX('E', 13, ANALOG)>, /* SPI4_MISO */
-						 <STM32_PINMUX('E', 14, ANALOG)>; /* SPI4_MOSI */
-				};
-			};
-
-			spi5_pins_a: spi5-0 {
-				pins1 {
-					pinmux = <STM32_PINMUX('F', 7, AF5)>, /* SPI5_SCK */
-						 <STM32_PINMUX('F', 9, AF5)>; /* SPI5_MOSI */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <1>;
-				};
-
-				pins2 {
-					pinmux = <STM32_PINMUX('F', 8, AF5)>; /* SPI5_MISO */
-					bias-disable;
-				};
-			};
-
-			spi5_sleep_pins_a: spi5-sleep-0 {
-				pins {
-					pinmux = <STM32_PINMUX('F', 7, ANALOG)>, /* SPI5_SCK */
-						 <STM32_PINMUX('F', 8, ANALOG)>, /* SPI5_MISO */
-						 <STM32_PINMUX('F', 9, ANALOG)>; /* SPI5_MOSI */
-				};
-			};
 
 			uart4_pins_a: uart4-0 {
 				pins1 {
@@ -953,7 +346,7 @@
 
 			uart4_idle_pins_a: uart4-idle-0 {
 				pins1 {
-					pinmux = <STM32_PINMUX('G', 11, ANALOG)>; /* UART4_TX */
+					pinmux = <STM32_PINMUX('B', 9, ANALOG)>; /* UART4_TX */
 				};
 				pins2 {
 					pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
@@ -963,58 +356,54 @@
 
 			uart4_sleep_pins_a: uart4-sleep-0 {
 				pins {
-					pinmux = <STM32_PINMUX('G', 11, ANALOG)>, /* UART4_TX */
+					pinmux = <STM32_PINMUX('B', 9, ANALOG)>, /* UART4_TX */
 						 <STM32_PINMUX('B', 2, ANALOG)>; /* UART4_RX */
 				};
 			};
 
-			usart1_pins_b: usart1-1 {
-				pins1 {
-					pinmux = <STM32_PINMUX('A', 12, AF7)>; /* USART1_RTS */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <0>;
-				};
-				pins2 {
-					pinmux = <STM32_PINMUX('A', 11, AF7)>; /* USART1_CTS_NSS */
-					bias-disable;
-				};
-			};
-
-			usart1_idle_pins_b: usart1-idle-1 {
-				pins1 {
-					pinmux = <STM32_PINMUX('A', 12, ANALOG)>, /* USART1_RTS */
-						 <STM32_PINMUX('A', 11, ANALOG)>; /* USART1_CTS_NSS */
-				};
-			};
-
-			usart1_sleep_pins_b: usart1-sleep-1 {
-				pins {
-					pinmux = <STM32_PINMUX('A', 12, ANALOG)>, /* USART1_RTS */
-						 <STM32_PINMUX('A', 11, ANALOG)>; /* USART1_CTS_NSS */
-				};
-			};
+                       usart1_pins_b: usart1-1 {
+                               pins1 {
+                                       pinmux = <STM32_PINMUX('A', 12, AF7)>; /* USART1_RTS */
+                                       bias-disable;
+                                       drive-push-pull;
+                                       slew-rate = <0>;
+                               };
+                               pins2 {
+                                       pinmux = <STM32_PINMUX('A', 11, AF7)>; /* USART1_CTS_NSS */
+                                       bias-disable;
+                               };
+                       };
+
+                       usart1_idle_pins_b: usart1-idle-1 {
+                               pins1 {
+                                       pinmux = <STM32_PINMUX('A', 12, ANALOG)>, /* USART1_RTS */
+                                                <STM32_PINMUX('A', 11, ANALOG)>; /* USART1_CTS_NSS */
+                               };
+                       };
+
+                       usart1_sleep_pins_b: usart1-sleep-1 {
+                               pins {
+                                       pinmux = <STM32_PINMUX('A', 12, ANALOG)>, /* USART1_RTS */
+                                                <STM32_PINMUX('A', 11, ANALOG)>; /* USART1_CTS_NSS */
+                               };
+                       };
 
 			usart3_pins_b: usart3-1 {
 				pins1 {
-					pinmux = <STM32_PINMUX('B', 10, AF7)>, /* USART3_TX */
-						 <STM32_PINMUX('G', 8, AF8)>; /* USART3_RTS */
+					pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
 					bias-disable;
 					drive-push-pull;
 					slew-rate = <0>;
 				};
 				pins2 {
-					pinmux = <STM32_PINMUX('B', 12, AF8)>, /* USART3_RX */
-						 <STM32_PINMUX('B', 13, AF7)>; /* USART3_CTS_NSS */
+					pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
 					bias-disable;
 				};
 			};
 
 			usart3_idle_pins_b: usart3-idle-1 {
 				pins1 {
-					pinmux = <STM32_PINMUX('B', 10, ANALOG)>, /* USART3_TX */
-						 <STM32_PINMUX('G', 8, ANALOG)>, /* USART3_RTS */
-						 <STM32_PINMUX('B', 13, ANALOG)>; /* USART3_CTS_NSS */
+					pinmux = <STM32_PINMUX('B', 10, ANALOG)>; /* USART3_TX */
 				};
 				pins2 {
 					pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
@@ -1025,8 +414,6 @@
 			usart3_sleep_pins_b: usart3-sleep-1 {
 				pins {
 					pinmux = <STM32_PINMUX('B', 10, ANALOG)>, /* USART3_TX */
-						 <STM32_PINMUX('G', 8, ANALOG)>, /* USART3_RTS */
-						 <STM32_PINMUX('B', 13, ANALOG)>, /* USART3_CTS_NSS */
 						 <STM32_PINMUX('B', 12, ANALOG)>; /* USART3_RX */
 				};
 			};
@@ -1040,16 +427,6 @@
 
 &pinctrl_z {
 
-	btreg: bt_reg_on-0 {
-		pins {
-			pinmux = <STM32_PINMUX('Z', 6, GPIO)>;
-			drive-push-pull;
-			bias-pull-up;
-			output-high;
-			slew-rate = <0>;
-		};
-	};
-
 	usart1_pins_a: usart1-0 {
 		pins1 {
 			pinmux = <STM32_PINMUX('Z', 7, AF7)>; /* USART1_TX */
@@ -1080,26 +457,25 @@
 		};
 	};
 
-	spi1_pins_a: spi1-0 {
-		pins1 {
-			pinmux = <STM32_PINMUX('Z', 0, AF5)>, /* SPI1_SCK */
-				 <STM32_PINMUX('B', 5, AF5)>; /* SPI1_MOSI */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <1>;
-		};
-		pins2 {
-			pinmux = <STM32_PINMUX('Z', 1, AF5)>; /* SPI1_MISO */
-			bias-disable;
-		};
-	};
-
-	spi1_sleep_pins_a: spi1-sleep-0 {
-		pins {
-			pinmux = <STM32_PINMUX('Z', 0, ANALOG)>, /* SPI1_SCK */
-				 <STM32_PINMUX('Z', 1, ANALOG)>, /* SPI1_MISO */
-				 <STM32_PINMUX('B', 5, ANALOG)>; /* SPI1_MOSI */
-		};
-	};
+        spi1_pins_a: spi1-0 {
+                pins1 {
+                        pinmux = <STM32_PINMUX('Z', 0, AF5)>, /* SPI1_SCK */
+                                <STM32_PINMUX('Z', 2, AF5)>; /* SPI1_MOSI */
+                        bias-disable;
+                        drive-push-pull;
+                        slew-rate = <1>;
+                };
+                pins2 {
+                        pinmux = <STM32_PINMUX('Z', 1, AF5)>; /* SPI1_MISO */
+                        bias-disable;
+                };
+        };
+
+        spi1_sleep_pins_a: spi1-sleep-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('Z', 0, ANALOG)>, /* SPI1_SCK */
+                                 <STM32_PINMUX('Z', 1, ANALOG)>, /* SPI1_MISO */
+                                 <STM32_PINMUX('Z', 2, ANALOG)>; /* SPI1_MOSI */
+                };
+        };
 };
-
diff --git a/arch/arm/dts/phyboard-stm32mp1-uno-r3-extension.dtsi b/arch/arm/dts/phyboard-stm32mp1-uno-r3-extension.dtsi
new file mode 100644
index 0000000..3c2d15f
--- /dev/null
+++ b/arch/arm/dts/phyboard-stm32mp1-uno-r3-extension.dtsi
@@ -0,0 +1,76 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
+ * Author: Christophe PARANT <c.parant@phytec.fr>.
+ */
+
+
+&timers4{
+	status = "okay";
+
+	/* USER CODE BEGIN timers4 */
+	/* USER CODE END timers4 */
+
+	pwm4: pwm{
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&tim4_pwm_pins_mx>;
+		pinctrl-1 = <&tim4_pwm_sleep_pins_mx>;
+		status = "okay";
+
+		/* USER CODE BEGIN timers4_pwm */
+		/* USER CODE END timers4_pwm */
+	};
+};
+
+&timers15{
+	status = "okay";
+
+	/* USER CODE BEGIN timers15 */
+	/* USER CODE END timers15 */
+
+	pwm15: pwm{
+		pinctrl-names = "default", "sleep";
+		pinctrl-0 = <&tim15_pwm_pins_mx>;
+		pinctrl-1 = <&tim15_pwm_sleep_pins_mx>;
+		status = "okay";
+
+		/* USER CODE BEGIN timers15_pwm */
+		/* USER CODE END timers15_pwm */
+	};
+};
+
+// Other Timers and ADCs for the Arduino Shield connector are settled in "phycore-stm32mp1-motor-control.dtsi"
+
+
+&pinctrl {
+
+    tim4_pwm_pins_mx: tim4_pwm_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 7, AF2)>; /* TIM4_CH2 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+    };
+
+    tim4_pwm_sleep_pins_mx: tim4_pwm_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 7, ANALOG)>; /* TIM4_CH2 */
+		};
+    };
+
+    tim15_pwm_pins_mx: tim15_pwm_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 5, AF4)>; /* TIM15_CH1 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+    };
+
+    tim15_pwm_sleep_pins_mx: tim15_pwm_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 5, ANALOG)>; /* TIM15_CH1 */
+		};
+    };
+};
diff --git a/arch/arm/dts/phyboard-stm32mp1.dtsi b/arch/arm/dts/phyboard-stm32mp1.dtsi
index 5f9d381..295dabf 100644
--- a/arch/arm/dts/phyboard-stm32mp1.dtsi
+++ b/arch/arm/dts/phyboard-stm32mp1.dtsi
@@ -8,7 +8,7 @@
 #include <dt-bindings/leds/leds-pca9532.h>
 
 / {
-        model = "Phytec GmbH phycore-stm32mp1 Dev Board";
+        model = "Phytec GmbH phycore-stm32mp1 Sargas Dev Board";
         compatible = "phytec,pcm939-1517-2", "st,stm32mp157";
 
 	aliases {
@@ -18,7 +18,7 @@
 		serial0 = &uart4;
                 serial1 = &usart3;
                 serial2 = &usart1;
-	};
+        };
 
 	chosen {
 		stdout-path = "serial0:115200n8";
@@ -178,17 +178,6 @@
 	status = "disabled";
 };
 
-&i2s2 {
-	clocks = <&rcc SPI2>, <&rcc SPI2_K>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
-	clock-names = "pclk", "i2sclk", "x8k", "x11k";
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&i2s2_pins_a>;
-	pinctrl-1 = <&i2s2_pins_sleep_a>;
-	status = "disabled";
-
-	i2s2_port: port {
-	};
-};
 
 &sai2 {
 	clocks = <&rcc SAI2>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
@@ -250,86 +239,14 @@
 	status = "okay";
 };
 
-&spi4 {
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&spi4_pins_a>;
-	pinctrl-1 = <&spi4_sleep_pins_a>;
-	status = "disabled";
-};
-
-&spi5 {
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&spi5_pins_a>;
-	pinctrl-1 = <&spi5_sleep_pins_a>;
-	status = "disabled";
-};
 
-&timers1 {
-	/* spare dmas for other usage */
-	/delete-property/dmas;
-	/delete-property/dma-names;
-	pwm {
-		pinctrl-0 = <&pwm1_pins_a>;
-		pinctrl-1 = <&pwm1_sleep_pins_a>;
-		pinctrl-names = "default", "sleep";
-		status = "disabled";
-	};
-	timer@0 {
-		status = "disabled";
-	};
-};
-
-&timers3 {
-	/delete-property/dmas;
-	/delete-property/dma-names;
-	pwm {
-		pinctrl-0 = <&pwm3_pins_a>;
-		pinctrl-1 = <&pwm3_sleep_pins_a>;
-		pinctrl-names = "default", "sleep";
-		status = "disabled";
-	};
-	timer@2 {
-		status = "disabled";
-	};
-};
-
-&timers4 {
-	/delete-property/dmas;
-	/delete-property/dma-names;
-	pwm {
-		pinctrl-0 = <&pwm4_pins_a &pwm4_pins_b>;
-		pinctrl-1 = <&pwm4_sleep_pins_a &pwm4_sleep_pins_b>;
-		pinctrl-names = "default", "sleep";
-		status = "disabled";
-	};
-	timer@3 {
-		status = "disabled";
-	};
-};
-
-&timers5 {
-	/delete-property/dmas;
-	/delete-property/dma-names;
-	pwm {
-		pinctrl-0 = <&pwm5_pins_a>;
-		pinctrl-1 = <&pwm5_sleep_pins_a>;
-		pinctrl-names = "default", "sleep";
-		status = "disabled";
-	};
-	timer@4 {
-		status = "disabled";
-	};
+&spi1 {
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&spi1_pins_a>;
+        pinctrl-1 = <&spi1_sleep_pins_a>;
+        status = "okay";
 };
 
-&timers6 {
-	status = "okay";
-	/* spare dmas for other usage */
-	/delete-property/dmas;
-	/delete-property/dma-names;
-	timer@5 {
-		status = "disabled";
-	};
-};
 
 &uart4 {
 	pinctrl-names = "default", "sleep", "idle", "no_console_suspend";
@@ -345,6 +262,8 @@
         pinctrl-0 = <&usart1_pins_a &usart1_pins_b>;
         pinctrl-1 = <&usart1_sleep_pins_a &usart1_sleep_pins_b>;
         pinctrl-2 = <&usart1_idle_pins_a &usart1_idle_pins_b>;
+        /*st,hw-flow-ctrl;*/
+	/*linux,rs485-enabled-at-boot-time;*/
         status = "okay";
 };
 
@@ -353,7 +272,6 @@
 	pinctrl-0 = <&usart3_pins_b>;
 	pinctrl-1 = <&usart3_sleep_pins_b>;
 	pinctrl-2 = <&usart3_idle_pins_b>;
-        st,hw-flow-ctrl;
 	status = "okay";
 };
 
@@ -399,14 +317,17 @@
 	status = "disabled";
 };
 
-/* Select display interface by commenting/uncommenting the following lines */ 
-#include "phycore-stm32mp1-dsi-lcd-mb1407.dtsi"
-//#include "phycore-stm32mp1-peb-av01-hdmi.dtsi"
-//#include "phycore-stm32mp1-peb-av02-lcd.dtsi"
+/* Select only one display interface by commenting/uncommenting the following lines */
+#include "phyboard-stm32mp1-peb-av02-lcd.dtsi"
+//#include "phyboard-stm32mp1-peb-av01-hdmi.dtsi"
+//#include "phyboard-stm32mp1-dsi-lcd-mb1407.dtsi"
+//#include "phyboard-stm32mp1-dsi-rpi-official-display.dtsi"
 
 
-/* Selected connectors used commenting/uncommenting the following line  */ 
-//#include "phycore-stm32mp1-pi-hat-extension.dtsi"
-//#include "phycore-stm32mp1-uno-r3-extension.dtsi"
-//#include "phycore-stm32mp1-motor-control.dtsi"
+/* Select specific connectors configuration used commenting/uncommenting the following line  */ 
+#include "phyboard-stm32mp1-pi-hat-extension.dtsi"
+//#include "phyboard-stm32mp1-uno-r3-extension.dtsi"
+//#include "phyboard-stm32mp1-motor-control.dtsi"    // not compatible with PEB-AV01/02
+//#include "phyboard-stm32mp1-motor-control-m4.dtsi" // not compatible with PEB-AV01/02
+//#include "phyboard-stm32mp1-pi-hat-redbear.dtsi"
 
diff --git a/arch/arm/dts/phycore-stm32mp1-1.dts b/arch/arm/dts/phycore-stm32mp1-1.dts
index 05dafaa..3faa54f 100644
--- a/arch/arm/dts/phycore-stm32mp1-1.dts
+++ b/arch/arm/dts/phycore-stm32mp1-1.dts
@@ -15,6 +15,7 @@
 
 };
 
+
 &dts {
         status = "okay";
 };
@@ -27,7 +28,7 @@
         status = "okay";
 };
 
-&rtc {
+&i2c4_eeprom {
         status = "okay";
 };
 
diff --git a/arch/arm/dts/phycore-stm32mp1-2.dts b/arch/arm/dts/phycore-stm32mp1-2.dts
index 4a81718..2a4e764 100644
--- a/arch/arm/dts/phycore-stm32mp1-2.dts
+++ b/arch/arm/dts/phycore-stm32mp1-2.dts
@@ -27,7 +27,7 @@
         status = "okay";
 };
 
-&rtc {
+&i2c4_eeprom {
         status = "okay";
 };
 
diff --git a/arch/arm/dts/phycore-stm32mp1-3.dts b/arch/arm/dts/phycore-stm32mp1-3.dts
index 82295a3..cb00d8a 100644
--- a/arch/arm/dts/phycore-stm32mp1-3.dts
+++ b/arch/arm/dts/phycore-stm32mp1-3.dts
@@ -27,7 +27,7 @@
         status = "okay";
 };
 
-&rtc {
+&i2c4_eeprom {
         status = "okay";
 };
 
diff --git a/arch/arm/dts/phycore-stm32mp1-4.dts b/arch/arm/dts/phycore-stm32mp1-4.dts
index cb7e374..640d3c5 100644
--- a/arch/arm/dts/phycore-stm32mp1-4.dts
+++ b/arch/arm/dts/phycore-stm32mp1-4.dts
@@ -6,7 +6,7 @@
 
 /dts-v1/;
 
-#include "phycore-stm32mp157fac-som.dtsi"
+#include "phycore-stm32mp157cac-som.dtsi"
 #include "phyboard-stm32mp1.dtsi"
 
 / {
@@ -27,7 +27,7 @@
         status = "okay";
 };
 
-&rtc {
+&i2c4_eeprom {
         status = "okay";
 };
 
diff --git a/arch/arm/dts/phycore-stm32mp1-5.dts b/arch/arm/dts/phycore-stm32mp1-5.dts
index 1617b84..23d38b4 100644
--- a/arch/arm/dts/phycore-stm32mp1-5.dts
+++ b/arch/arm/dts/phycore-stm32mp1-5.dts
@@ -27,7 +27,7 @@
         status = "okay";
 };
 
-&rtc {
+&i2c4_eeprom {
         status = "okay";
 };
 
diff --git a/arch/arm/dts/phycore-stm32mp1-6.dts b/arch/arm/dts/phycore-stm32mp1-6.dts
index c3d765e..e06dfde 100644
--- a/arch/arm/dts/phycore-stm32mp1-6.dts
+++ b/arch/arm/dts/phycore-stm32mp1-6.dts
@@ -24,15 +24,15 @@
 };
 
 &i2c4_rtc {
-        status = "disabled";
+        status = "okay";
 };
 
-&rtc {
+&i2c4_eeprom {
         status = "okay";
 };
 
 &qspi {
-        status = "disabled";
+        status = "okay";
 };
 
 &fmc {
diff --git a/arch/arm/dts/phycore-stm32mp1-7.dts b/arch/arm/dts/phycore-stm32mp1-7.dts
index 38f1220..89bf4cd 100644
--- a/arch/arm/dts/phycore-stm32mp1-7.dts
+++ b/arch/arm/dts/phycore-stm32mp1-7.dts
@@ -24,15 +24,15 @@
 };
 
 &i2c4_rtc {
-        status = "disabled";
+        status = "okay";
 };
 
-&rtc {
+&i2c4_eeprom {
         status = "okay";
 };
 
 &qspi {
-        status = "disabled";
+        status = "okay";
 };
 
 &fmc {
diff --git a/arch/arm/dts/phycore-stm32mp1-dsi-lcd-mb1407.dtsi b/arch/arm/dts/phycore-stm32mp1-dsi-lcd-mb1407.dtsi
deleted file mode 100644
index 8578d51..0000000
--- a/arch/arm/dts/phycore-stm32mp1-dsi-lcd-mb1407.dtsi
+++ /dev/null
@@ -1,84 +0,0 @@
-// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
-/*
- * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
- * Author: Dom VOVARD <dom.vovard@linrt.com>.
- */
-
-
-&i2c1 {
-        status = "okay";
-        touchscreen@2a {
-                compatible = "focaltech,ft6236";
-                reg = <0x2a>;
-                interrupts = <8 2>;
-                interrupt-parent = <&gpioi>;
-                interrupt-controller;
-                touchscreen-size-x = <480>;
-                touchscreen-size-y = <800>;
-                status = "okay";
-        };
-
-        touchscreen@38 {
-                compatible = "focaltech,ft6336";
-                reg = <0x38>;
-                interrupts = <8 2>;
-                interrupt-parent = <&gpioi>;
-                interrupt-controller;
-                touchscreen-size-x = <480>;
-                touchscreen-size-y = <800>;
-                status = "okay";
-        };
-};
-
-&ltdc {
-        dma-ranges;
-        status = "okay";
-
-        port {
-                #address-cells = <1>;
-                #size-cells = <0>;
-
-                ltdc_ep1_out: endpoint@1 {
-                        reg = <1>;
-                        remote-endpoint = <&dsi_in>;
-                };
-        };
-};
-
-&dsi {
-        #address-cells = <1>;
-        #size-cells = <0>;
-        status = "okay";
-
-        ports {
-                #address-cells = <1>;
-                #size-cells = <0>;
-
-                port@0 {
-                        reg = <0>;
-                        dsi_in: endpoint {
-                                remote-endpoint = <&ltdc_ep1_out>;
-                        };
-                };
-
-                port@1 {
-                        reg = <1>;
-                        dsi_out: endpoint {
-                                remote-endpoint = <&panel_in>;
-                        };
-                };
-        };
-
-        dsi_panel:panel@0 {
-                compatible = "orisetech,otm8009a";
-                reg = <0>;
-                reset-gpios = <&gpiod 9 GPIO_ACTIVE_LOW>;
-                status = "okay";
-
-                port {
-                        panel_in: endpoint {
-                                remote-endpoint = <&dsi_out>;
-                        };
-                };
-        };
-};
diff --git a/arch/arm/dts/phycore-stm32mp1-motor-control.dtsi b/arch/arm/dts/phycore-stm32mp1-motor-control.dtsi
deleted file mode 100644
index cf2c3d1..0000000
--- a/arch/arm/dts/phycore-stm32mp1-motor-control.dtsi
+++ /dev/null
@@ -1,6 +0,0 @@
-// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
-/*
- * Copyright (C) PHYTEC GmbH 2019 - All Rights Reserved
- * Author: Dom VOVARD <dom.vovard@linrt.com>.
- */
-
diff --git a/arch/arm/dts/phycore-stm32mp157-pinctrl.dtsi b/arch/arm/dts/phycore-stm32mp157-pinctrl.dtsi
index 6d8bf77..c1bffca 100644
--- a/arch/arm/dts/phycore-stm32mp157-pinctrl.dtsi
+++ b/arch/arm/dts/phycore-stm32mp157-pinctrl.dtsi
@@ -147,18 +147,13 @@
 						 <STM32_PINMUX('C', 2, AF11)>, /* ETH_RGMII_TXD2 */
 						 <STM32_PINMUX('E', 2, AF11)>, /* ETH_RGMII_TXD3 */
 						 <STM32_PINMUX('B', 11, AF11)>, /* ETH_RGMII_TX_CTL */
+						 <STM32_PINMUX('A', 2, AF11)>, /* ETH_MDIO */
 						 <STM32_PINMUX('C', 1, AF11)>; /* ETH_MDC */
 					bias-disable;
 					drive-push-pull;
 					slew-rate = <2>;
 				};
 				pins2 {
-					pinmux = <STM32_PINMUX('A', 2, AF11)>; /* ETH_MDIO */
-					bias-disable;
-					drive-push-pull;
-					slew-rate = <0>;
-				};
-				pins3 {
 					pinmux = <STM32_PINMUX('C', 4, AF11)>, /* ETH_RGMII_RXD0 */
 						 <STM32_PINMUX('C', 5, AF11)>, /* ETH_RGMII_RXD1 */
 						 <STM32_PINMUX('H', 6, AF11)>, /* ETH_RGMII_RXD2 */
@@ -181,7 +176,7 @@
 						 <STM32_PINMUX('C', 1, ANALOG)>, /* ETH_MDC */
 						 <STM32_PINMUX('C', 4, ANALOG)>, /* ETH_RGMII_RXD0 */
 						 <STM32_PINMUX('C', 5, ANALOG)>, /* ETH_RGMII_RXD1 */
-						 <STM32_PINMUX('B', 0, ANALOG)>, /* ETH_RGMII_RXD2 */
+						 <STM32_PINMUX('H', 6, ANALOG)>, /* ETH_RGMII_RXD2 */
 						 <STM32_PINMUX('B', 1, ANALOG)>, /* ETH_RGMII_RXD3 */
 						 <STM32_PINMUX('A', 1, ANALOG)>, /* ETH_RGMII_RX_CLK */
 						 <STM32_PINMUX('A', 7, ANALOG)>; /* ETH_RGMII_RX_CTL */
diff --git a/arch/arm/dts/phycore-stm32mp157cac-som.dtsi b/arch/arm/dts/phycore-stm32mp157cac-som.dtsi
index 1c31f31..cf901de 100644
--- a/arch/arm/dts/phycore-stm32mp157cac-som.dtsi
+++ b/arch/arm/dts/phycore-stm32mp157cac-som.dtsi
@@ -17,13 +17,19 @@
 
 
 / {
-        model = "Phytec GmbH phycore-stm32mp1-1 SOM";
+        model = "Phytec GmbH phycore-stm32mp1 SOM";
         compatible = "phytec,PCM-068-1534-0-005", "st,stm32mp157";
 
         memory@c0000000 {
                 reg = <0xc0000000 0x20000000>;
         };
 
+	aliases {
+		mmc0 = &sdmmc1;
+		mmc1 = &sdmmc2;
+                mmc2 = &sdmmc3;
+	};
+
         reserved-memory {
                 #address-cells = <1>;
                 #size-cells = <1>;
@@ -121,7 +127,6 @@
                 status = "okay";
 		wakeup-source;
 
-
                 regulators {
                         compatible = "st,stpmic1-regulators";
 
@@ -258,9 +263,10 @@
                 };
         };
 
-        eeprom@50 {
+        i2c4_eeprom: eeprom@50 {
                 compatible = "microchip,24c32", "atmel,24c32";
                 reg = <0x50>;
+		status = "disabled";
         };
 
         i2c4_rtc: rtc@52 {
@@ -268,8 +274,8 @@
                 reg = <0x52>;
                 /*interrupt-parent = <&gpio5>;
                 interrupts = <1 IRQ_TYPE_LEVEL_LOW>;*/
-		backup-switchover-mode = /bits/ 8 <0x01>;
-                status = "okay";
+		backup-switchover-mode = /bits/ 8 <0x03>;
+                status = "disabled";
         };
 };
 
@@ -343,7 +349,7 @@
         reg = <0x58003000 0x1000>, <0x70000000 0x4000000>;
         #address-cells = <1>;
         #size-cells = <0>;
-        status = "okay";
+        status = "disabled";
 
         flash0: w25q128@0 {
                 compatible = "winbond,w25q128", "jedec,spi-nor", "spi-flash";
@@ -387,6 +393,6 @@
         vmmc-supply = <&v3v3>;
         vqmmc-supply = <&v3v3>;
         mmc-ddr-3_3v;
-        status = "okay";
+        status = "disabled";
 };
 
