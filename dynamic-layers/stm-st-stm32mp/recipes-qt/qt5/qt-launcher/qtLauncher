#!/bin/sh
# use interactive shell environment for machine specific env vars
. /etc/profile

if [ -e /dev/input/res-touchscreen ] && [ -e /dev/input/touchscreen0 ]; then
    if [ ! -e /etc/pointercal ]; then
        #res. touchscreen is not calibrate. We should do this first
        /usr/bin/ts_calibrate
    fi
    #forbid libinput when using resistive touchscreens
    export QT_QPA_EGLFS_NO_LIBINPUT=1
    #enable tslib
    export QT_QPA_EGLFS_TSLIB=1
    export QT_QPA_FB_TSLIB=1
    export TSLIB_TSDEVICE="/dev/input/touchscreen0"
fi

# disable qt's audiosink if no audio present
ls -1 /dev/snd/pcm* > /dev/null 2>&1
if [ "$?" != "0" ]; then
    export QT_GSTREAMER_PLAYBIN_AUDIOSINK=fakesink
fi

export QT_QPA_PLATFORM=@QT_QPA_PLATFORM@
#export QT_QPA_FB_DRM=@QT_QPA_FB_DRM@
export QT_QPA_EGLFS_KMS_CONFIG=@QT_QPA_EGLFS_KMS_CONFIG@

# force to keep the MODE SETTING set
export QT_QPA_EGLFS_ALWAYS_SET_MODE=1
#force to use KMS ATOMIC
export QT_QPA_EGLFS_KMS_ATOMIC=1

export QT_QPA_FB_DRM=1

psplash-drm-quit

# Common Debug Settings
#export QT_DEBUG_PLUGINS=1
#export QT_LOGGING_RULES=qt.qpa.*=true

# EGLFS environment variables accessible for qt 5.12
# Documentation: https://doc.qt.io/qt-5/embedded-linux.html
##
# * QT_QPA_EGLFS_ROTATION
# Specifies the rotation applied to software-rendered content in QWidget-based applications
#
# * QT_QPA_EGLFS_KMS_ATOMIC
# enable the DRM atomic
#
# * QT_QPA_EGLFS_HIDECURSOR
# The mouse cursor shows up whenever this variable is not set
#
# * QT_QPA_EGLFS_ALWAYS_SET_MODE
# Due to the fact that modesetting is done only when the desired mode is actually
# different from the active one (unless forced via the QT_QPA_EGLFS_ALWAYS_SET_MODE
# environment variable), this value is useful to keep the current mode and any content
# in the planes not touched by Qt.


if [ $# -eq 0 ]; then
    echo 'usage: qtLauncher <your_qt_application>'
else
    $@ #run the application
fi
